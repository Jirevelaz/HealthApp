import React from "react";
import { useQuery } from "@tanstack/react-query";
import { base44 } from "@/api/base44Client";
import { Heart, Footprints, Activity, TrendingUp, Moon } from "lucide-react";
import { format, subDays } from "date-fns";
import { es } from "date-fns/locale";
import { createPageUrl } from "@/utils";

import HealthCard from "@/features/health/components/HealthCard";
import { MiniHeartRateChart, MiniStepsChart } from "@/features/health/components/MiniChart";

export default function Dashboard() {
  const { data: heartRates = [] } = useQuery({
    queryKey: ['heartRates'],
    queryFn: () => base44.entities.HeartRate.list('-timestamp'),
  });

  const { data: steps = [] } = useQuery({
    queryKey: ['steps'],
    queryFn: () => base44.entities.Steps.list('-date'),
  });

  // Calcular estadísticas
  const today = format(new Date(), 'yyyy-MM-dd');
  const stepsToday = steps.find(s => s.date === today)?.count || 0;
  const latestHR = heartRates[0]?.bpm || 0;
  const avgHR = heartRates.length > 0 ? Math.round(heartRates.reduce((sum, hr) => sum + hr.bpm, 0) / heartRates.length) : 0;

  // Determinar estados
  const getHeartRateStatus = (bpm) => {
    if (bpm === 0) return { text: "Sin datos", color: "text-white/70" };
    if (bpm < 60) return { text: "Bajo", color: "text-white" };
    if (bpm <= 100) return { text: "Normal", color: "text-white" };
    return { text: "Alto", color: "text-white" };
  };

  const getStepsStatus = (steps) => {
    if (steps >= 10000) return { text: "Meta alcanzada", color: "text-white" };
    if (steps >= 5000) return { text: "Buen progreso", color: "text-white" };
    return { text: "Sigue adelante", color: "text-white/70" };
  };

  const hrStatus = getHeartRateStatus(latestHR);
  const stepsStatus = getStepsStatus(stepsToday);

  return (
    <div className="p-4 space-y-4">
      {/* Header */}
      <div className="mb-6">
        <h1 className="text-2xl font-bold text-gray-900 dark:text-white mb-1">Resumen</h1>
        <p className="text-gray-600 dark:text-gray-400 capitalize">
          {format(new Date(), "EEEE, d 'de' MMMM", { locale: es })}
        </p>
      </div>

      {/* Health Cards */}
      <div className="space-y-4">
        <HealthCard
          title="Frecuencia Cardíaca"
          value={latestHR || "--"}
          unit="BPM"
          subtitle={latestHR ? format(new Date(heartRates[0]?.timestamp), "HH:mm") : "Sin datos"}
          gradient="bg-gradient-to-br from-red-500 to-pink-600"
          icon={Heart}
          status={hrStatus.text}
          statusColor={hrStatus.color}
          chart={heartRates.length > 0 ? <MiniHeartRateChart data={heartRates} /> : null}
          href={createPageUrl("HeartRate")}
        />

        <HealthCard
          title="Pasos"
          value={stepsToday.toLocaleString()}
          unit="pasos"
          subtitle="Hoy"
          gradient="bg-gradient-to-br from-green-500 to-emerald-600"
          icon={Footprints}
          status={stepsStatus.text}
          statusColor={stepsStatus.color}
          chart={steps.length > 0 ? <MiniStepsChart data={steps} /> : null}
          href={createPageUrl("Steps")}
        />

        <HealthCard
          title="Promedio Cardíaco"
          value={avgHR || "--"}
          unit="BPM"
          subtitle="Últimos 30 días"
          gradient="bg-gradient-to-br from-purple-500 to-indigo-600"
          icon={Activity}
          status={avgHR > 0 ? "Datos disponibles" : "Sin datos"}
          statusColor="text-white/80"
        />

        <div className="grid grid-cols-2 gap-4">
          <HealthCard
            title="Distancia"
            value={steps.reduce((sum, s) => sum + (s.distance || 0), 0).toFixed(1)}
            unit="km"
            subtitle="Total"
            gradient="bg-gradient-to-br from-blue-500 to-cyan-600"
            icon={TrendingUp}
            status="Acumulado"
            statusColor="text-white/80"
          />

          <HealthCard
            title="Sueño"
            value="--"
            unit="h"
            subtitle="Próximamente"
            gradient="bg-gradient-to-br from-indigo-500 to-purple-600"
            icon={Moon}
            status="No disponible"
            statusColor="text-white/70"
          />
        </div>
      </div>
    </div>
  );
}
